name: Build/release

on:
  push:
    branches:
      - main
      - review
  workflow_dispatch:

jobs:
  release:
    runs-on: macos-latest

    environment:
      name: ${{ (github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v')) && 'production' || 'staging' }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Decode signing certificate into a file
        env:
          CERTIFICATE_BASE64: ${{ secrets.CSC_LINK }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > signing-cert.p12

      - name: Build/release Electron app
        uses: Yan-Jobs/action-electron-builder@v1.7.0
        env:
          VITE_API_PATH: ${{ vars.VITE_API_PATH }}
          VITE_AUTH_APP_URL: ${{ vars.VITE_AUTH_APP_URL }}
          VITE_LOGIN_IS_REQUIRED: ${{ vars.VITE_LOGIN_IS_REQUIRED }}
          EP_PRE_RELEASE: ${{ vars.EP_PRE_RELEASE }}
          CSC_LINK: signing-cert.p12
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          release: true
          build_script_name: package
          args: --config electron-builder.ts --mac --windows -c.compression=maximum
